==============================================================
This "test case" is just a quick reference to show the schema
and contents of the "foo" table, to avoid the need to paw
through the code to get that info.

Note the aggregators for foo:
cnt - count
m1 - float sum
m2 - double sum
unique_dim1 - hyper uniques

=== case
Schema of foo
=== SQL
SELECT *
FROM foo
=== schema
__time TIMESTAMP(3)
dim1 VARCHAR
dim2 VARCHAR
dim3 VARCHAR
cnt BIGINT
m1 FLOAT
m2 DOUBLE
unique_dim1 COMPLEX<hyperUnique>
=== plan
LogicalProject(__time=[$0], dim1=[$1], dim2=[$2], dim3=[$3], cnt=[$4], m1=[$5], m2=[$6], unique_dim1=[$7])
  LogicalTableScan(table=[[druid, foo]])
=== results
[946684800000,"","a","[\"a\",\"b\"]",1,1.0,1.0,"\"AQAAAEAAAA==\""]
[946771200000,"10.1","","[\"b\",\"c\"]",1,2.0,2.0,"\"AQAAAQAAAAHNBA==\""]
[946857600000,"2","","d",1,3.0,3.0,"\"AQAAAQAAAAOzAg==\""]
[978307200000,"1","a","",1,4.0,4.0,"\"AQAAAQAAAAFREA==\""]
[978393600000,"def","abc","",1,5.0,5.0,"\"AQAAAQAAAACyEA==\""]
[978480000000,"abc","","",1,6.0,6.0,"\"AQAAAQAAAAEkAQ==\""]
==============================================================
=== case
Type propagation, simple case
=== SQL
SELECT CAST(1 AS INTEGER) + CAST(2 AS BIGINT)
FROM foo
LIMIT 1
=== schema
EXPR$0 BIGINT
=== plan
LogicalSort(fetch=[1])
  LogicalProject(EXPR$0=[+(1, 2:BIGINT)])
    LogicalTableScan(table=[[druid, foo]])
=== results
[3]
==============================================================
=== case
Aggregates, normal case
=== SQL
SELECT
    __time,
    dim1,
    dim2,
    dim3,
	SUM(cnt),
	SUM(m1),
	SUM(m2)
FROM foo
GROUP BY __time, dim1, dim2, dim3
=== options
vectorize=false
=== schema
__time TIMESTAMP(3)
dim1 VARCHAR
dim2 VARCHAR
dim3 VARCHAR
EXPR$4 BIGINT
EXPR$5 DOUBLE
EXPR$6 DOUBLE
=== plan
LogicalAggregate(group=[{0, 1, 2, 3}], EXPR$4=[SUM($4)], EXPR$5=[SUM($5)], EXPR$6=[SUM($6)])
  LogicalProject(__time=[$0], dim1=[$1], dim2=[$2], dim3=[$3], cnt=[$4], m1=[$5], m2=[$6])
    LogicalTableScan(table=[[druid, foo]])
=== results
[946684800000,"","a","a",1,1.0,1.0]
[946684800000,"","a","b",1,1.0,1.0]
[946771200000,"10.1","","b",1,2.0,2.0]
[946771200000,"10.1","","c",1,2.0,2.0]
[946857600000,"2","","d",1,3.0,3.0]
[978307200000,"1","a","",1,4.0,4.0]
[978393600000,"def","abc","",1,5.0,5.0]
[978480000000,"abc","","",1,6.0,6.0]
==============================================================
=== case
Aggregates, omit aggregation, no catalog
=== SQL
SELECT
    __time,
    dim1,
    dim2,
    dim3,
	cnt,
	SUM(m1),
	SUM(m2)
FROM foo
GROUP BY __time, dim1, dim2, dim3
=== options
vectorize=false
=== exception
ValidationException
=== error
!.* Expression 'cnt' is not being grouped
