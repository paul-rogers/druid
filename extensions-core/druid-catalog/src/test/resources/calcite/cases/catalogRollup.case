Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
==============================================================
Test cases for the catalog feature, for the rollup tables.

==============================================================
Converted from testInsertFromExternalAggregate()
INSERT with rollup
=== case
INSERT from external aggregate
=== SQL
INSERT INTO dst
SELECT
  x,
  SUM(z) AS sum_z,
  COUNT(*) AS cnt
FROM TABLE(extern(
   '{
     "type": "inline",
     "data": "a,b,1\nc,d,2\n"
    }',
	'{
	  "type": "csv",
	  "columns": ["x","y","z"],
	  "listDelimiter": null,
	  "findColumnsFromHeader": false,
	  "skipHeaderRows": 0
	 }',
	 '[
	   {"name": "x", "type": "STRING"},
	   {"name": "y", "type": "STRING"},
	   {"name": "z", "type": "LONG"}
	 ]'
))
GROUP BY 1
PARTITIONED BY ALL TIME
=== targetSchema
x VARCHAR
sum_z BIGINT
cnt BIGINT
=== resources
DATASOURCE/dst/WRITE
EXTERNAL/EXTERNAL/READ
=== plan
LogicalInsert(target=[dst], granularity=[AllGranularity])
  LogicalAggregate(group=[{0}], sum_z=[SUM($1)], cnt=[COUNT()])
    LogicalProject(x=[$0], z=[$2])
      ExternalTableScan(dataSource=[{"type":"external","inputSource":{"type":"inline","data":"a,b,1\nc,d,2\n"},"inputFormat":{"type":"csv","columns":["x","y","z"],"listDelimiter":null,"findColumnsFromHeader":false,"skipHeaderRows":0},"signature":[{"name":"x","type":"STRING"},{"name":"y","type":"STRING"},{"name":"z","type":"LONG"}]}])
=== native
{
  "queryType" : "groupBy",
  "dataSource" : {
    "type" : "external",
    "inputSource" : {
      "type" : "inline",
      "data" : "a,b,1\nc,d,2\n"
    },
    "inputFormat" : {
      "type" : "csv",
      "columns" : [ "x", "y", "z" ],
      "listDelimiter" : null,
      "findColumnsFromHeader" : false,
      "skipHeaderRows" : 0
    },
    "signature" : [ {
      "name" : "x",
      "type" : "STRING"
    }, {
      "name" : "y",
      "type" : "STRING"
    }, {
      "name" : "z",
      "type" : "LONG"
    } ]
  },
  "intervals" : {
    "type" : "intervals",
    "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
  },
  "granularity" : {
    "type" : "all"
  },
  "dimensions" : [ {
    "type" : "default",
    "dimension" : "x",
    "outputName" : "d0",
    "outputType" : "STRING"
  } ],
  "aggregations" : [ {
    "type" : "longSum",
    "name" : "a0",
    "fieldName" : "z"
  }, {
    "type" : "count",
    "name" : "a1"
  } ],
  "limitSpec" : {
    "type" : "NoopLimitSpec"
  },
  "context" : {
    "maxParseExceptions" : 0,
    "msqSignature" : "[{\"name\":\"x\",\"type\":\"STRING\"},{\"name\":\"z\",\"type\":\"LONG\"}]",
    "multiStageQuery" : true,
    "sqlInsertSegmentGranularity" : "{\"type\":\"all\"}",
    "sqlQueryId" : "dummyId"
  }
}
=== execPlan
{
  "type" : "query_controller",
  "id" : "query-dummyId",
  "spec" : {
    "query" : {
      "queryType" : "groupBy",
      "dataSource" : {
        "type" : "external",
        "inputSource" : {
          "type" : "inline",
          "data" : "a,b,1\nc,d,2\n"
        },
        "inputFormat" : {
          "type" : "csv",
          "columns" : [ "x", "y", "z" ],
          "listDelimiter" : null,
          "findColumnsFromHeader" : false,
          "skipHeaderRows" : 0
        },
        "signature" : [ {
          "name" : "x",
          "type" : "STRING"
        }, {
          "name" : "y",
          "type" : "STRING"
        }, {
          "name" : "z",
          "type" : "LONG"
        } ]
      },
      "intervals" : {
        "type" : "intervals",
        "intervals" : [ "-146136543-09-08T08:23:32.096Z/146140482-04-24T15:36:27.903Z" ]
      },
      "granularity" : {
        "type" : "all"
      },
      "dimensions" : [ {
        "type" : "default",
        "dimension" : "x",
        "outputName" : "d0",
        "outputType" : "STRING"
      } ],
      "aggregations" : [ {
        "type" : "longSum",
        "name" : "a0",
        "fieldName" : "z"
      }, {
        "type" : "count",
        "name" : "a1"
      } ],
      "limitSpec" : {
        "type" : "NoopLimitSpec"
      },
      "context" : {
        "finalize" : true,
        "msqSignature" : "[{\"name\":\"x\",\"type\":\"STRING\"},{\"name\":\"z\",\"type\":\"LONG\"}]",
        "multiStageQuery" : true,
        "sqlInsertSegmentGranularity" : "{\"type\":\"all\"}",
        "sqlQueryId" : "dummyId"
      }
    },
    "columnMappings" : [ {
      "queryColumn" : "d0",
      "outputColumn" : "x"
    }, {
      "queryColumn" : "a0",
      "outputColumn" : "sum_z"
    }, {
      "queryColumn" : "a1",
      "outputColumn" : "cnt"
    } ],
    "destination" : {
      "type" : "dataSource",
      "dataSource" : "dst",
      "segmentGranularity" : {
        "type" : "all"
      }
    },
    "assignmentStrategy" : "max",
    "tuningConfig" : {
      "type" : "index_parallel",
      "maxRowsPerSegment" : 3000000,
      "appendableIndexSpec" : {
        "type" : "onheap",
        "preserveExistingMetrics" : false
      },
      "maxRowsInMemory" : 100000,
      "partitionsSpec" : {
        "type" : "dynamic",
        "maxRowsPerSegment" : 3000000,
        "maxTotalRows" : null
      },
      "indexSpec" : {
        "bitmap" : {
          "type" : "roaring",
          "compressRunOnSerialization" : true
        },
        "dimensionCompression" : "lz4",
        "metricCompression" : "lz4",
        "longEncoding" : "longs"
      },
      "indexSpecForIntermediatePersists" : {
        "bitmap" : {
          "type" : "roaring",
          "compressRunOnSerialization" : true
        },
        "dimensionCompression" : "lz4",
        "metricCompression" : "lz4",
        "longEncoding" : "longs"
      },
      "maxNumConcurrentSubTasks" : 1,
      "maxRetry" : 1,
      "taskStatusCheckPeriodMs" : 1000,
      "chatHandlerTimeout" : "PT10S",
      "chatHandlerNumRetries" : 5,
      "maxNumSegmentsToMerge" : 100,
      "totalNumMergeTasks" : 10,
      "logParseExceptions" : false,
      "maxParseExceptions" : 2147483647,
      "maxColumnsToMerge" : -1,
      "maxAllowedLockCount" : -1
    }
  },
  "sqlQuery" : "INSERT INTO dst\nSELECT\n  x,\n  SUM(z) AS sum_z,\n  COUNT(*) AS cnt\nFROM TABLE(extern(\n   '{\n     \"type\": \"inline\",\n     \"data\": \"a,b,1\\nc,d,2\\n\"\n    }',\n\t'{\n\t  \"type\": \"csv\",\n\t  \"columns\": [\"x\",\"y\",\"z\"],\n\t  \"listDelimiter\": null,\n\t  \"findColumnsFromHeader\": false,\n\t  \"skipHeaderRows\": 0\n\t }',\n\t '[\n\t   {\"name\": \"x\", \"type\": \"STRING\"},\n\t   {\"name\": \"y\", \"type\": \"STRING\"},\n\t   {\"name\": \"z\", \"type\": \"LONG\"}\n\t ]'\n))\nGROUP BY 1\nPARTITIONED BY ALL TIME",
  "sqlQueryContext" : {
    "maxParseExceptions" : 0,
    "msqSignature" : "[{\"name\":\"x\",\"type\":\"STRING\"},{\"name\":\"z\",\"type\":\"LONG\"}]",
    "multiStageQuery" : true,
    "sqlInsertSegmentGranularity" : "{\"type\":\"all\"}",
    "sqlQueryId" : "dummyId"
  },
  "sqlTypeNames" : [ "VARCHAR", "BIGINT", "BIGINT" ],
  "context" : {
    "forceTimeChunkLock" : true
  },
  "groupId" : "query-dummyId",
  "dataSource" : "dst",
  "resource" : {
    "availabilityGroup" : "query-dummyId",
    "requiredCapacity" : 1
  }
}
