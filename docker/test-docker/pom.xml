<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<!--
Builds the Docker image used for integration testing.

* Removes the image in the clean phase.
* Uses the Druid build from the distribution project.
* Assembles the set of needed files in the compile phase.
* Builds the Docker image in the install phase.

If you have already built Druid up to the distribution install phase,
then this project can be run over and over if you need to debug
changes to the image.

Reference: https://dzone.com/articles/build-docker-image-from-maven
-->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <packaging>pom</packaging>

    <artifactId>test-docker</artifactId>
    <name>test-docker</name>
    <description>Build the Docker image for integration tests.</description>

    <parent>
        <artifactId>druid</artifactId>
        <groupId>org.apache.druid</groupId>
        <version>0.23.0-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>

    <properties>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.apache.druid</groupId>
            <artifactId>distribution</artifactId>
            <version>${project.parent.version}</version>
  			<type>pom</type>
        </dependency>
    </dependencies>

   <profiles>
        <profile>
            <id>druid-image</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
		    <build>
			    <plugins>
					<plugin>
					    <groupId>org.codehaus.mojo</groupId>
					    <artifactId>exec-maven-plugin</artifactId>
					    <executions>

						    <!-- Remove existing image from local repo -->
						    <execution>
						        <id>docker-clean</id>
						        <phase>clean</phase>
						        <goals>
						        	<goal>exec</goal>
						        </goals>
						        <configuration>
							        <executable>docker</executable>
							        <workingDirectory>${project.basedir}</workingDirectory>
							        <arguments>
							            <argument>rmi</argument>
							            <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
							        </arguments>
						        </configuration>
					    	</execution>

						    <!--
						      Create new docker image using Dockerfile which must be present in current working directory.
						      Tag the image using maven project version information.
						    -->
						    <execution>
						        <id>docker-build</id>
						        <phase>install</phase>
						        <goals>
						        	<goal>exec</goal>
						        </goals>
						        <configuration>
							        <executable>docker</executable>
							        <workingDirectory>${project.basedir}/docker</workingDirectory>
							        <arguments>
							            <argument>build</argument>
							            <argument>-t</argument>
							            <argument>${project.groupId}/${project.artifactId}:${project.version}</argument>
										<argument>--build-arg</argument>
										<argument>BASE_IMAGE=${project.groupId}/base-docker:${project.version}</argument>
										<argument>--build-arg</argument>
										<argument>DRUID_TARBALL=../../../distribution/target/apache-druid-${project.version}-bin.tar.gz</argument>
							            <argument>.</argument>
							          </arguments>
						      </configuration>
						    </execution>

					    </executions>
					</plugin>
			    </plugins>
		    </build>
        </profile>
   </profiles>
</project>
